upstream web {
    server hibachi-front:3000;
    # connection to the inner django-backend service
    # here `django-backend` is the service's name in
    # docker-compose.yml, it is resolved by docker to inner IP address.
    # The `innerdjango` is just te name of upstream, used by nginx below.
}
server {
    # the connection to the outside world
    # will be changed to incorporate cert's bot and ssl
    # just to test it localy for now
    listen 80; # port exposed to outside world. Needs to be opened in docker-compose.yml
    server_name localhost;
    # server_name example.com;
    location / {
      # where to redirect `/` requests
      proxy_pass http://web;
      # return 301 https://$host$request_uri; # redirect all non https requests to https
    }
    location /.well-known/acme-challenge/ {
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
# server {
#     # new server, but for ssl (443 port)
#     listen 443 ssl; # listen 443 port
#     server_name api.snrsale.uz;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#     ssl_certificate /etc/letsencrypt/live/api.snrsale.uz/fullchain.pem; # <-this
#     ssl_certificate_key /etc/letsencrypt/live/api.snrsale.uz/privkey.pem; # <-this

#     location / {
#         proxy_pass http://innerdjango; # pass these requests to internal upstream
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto https;
#     }
#     location /static/ {
#       alias /var/www/static/;
#     }
#     location /media/ {
#       root /var/www;
#     }
# }